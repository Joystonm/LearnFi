{"ast":null,"code":"// Memory service for storing user data locally\n// This could be replaced with mem0 or another service in the future\n\nconst USER_DATA_KEY = 'learnfi_user_data';\nconst COMPLETED_TOPICS_KEY = 'learnfi_completed_topics';\nconst BADGES_KEY = 'learnfi_badges';\nconst SIMULATION_HISTORY_KEY = 'learnfi_simulation_history';\n\n// Helper function to safely parse JSON\nconst safelyParseJSON = json => {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n};\n\n// Save user data to localStorage\nconst saveUserData = userData => {\n  try {\n    localStorage.setItem(USER_DATA_KEY, JSON.stringify(userData));\n    return true;\n  } catch (error) {\n    console.error('Error saving user data:', error);\n    return false;\n  }\n};\n\n// Get user data from localStorage\nconst getUserData = () => {\n  const userData = localStorage.getItem(USER_DATA_KEY);\n  return safelyParseJSON(userData);\n};\n\n// Save completed topics\nconst saveCompletedTopics = topics => {\n  try {\n    localStorage.setItem(COMPLETED_TOPICS_KEY, JSON.stringify(topics));\n    return true;\n  } catch (error) {\n    console.error('Error saving completed topics:', error);\n    return false;\n  }\n};\n\n// Get completed topics\nconst getCompletedTopics = () => {\n  const topics = localStorage.getItem(COMPLETED_TOPICS_KEY);\n  return safelyParseJSON(topics) || [];\n};\n\n// Save badges\nconst saveBadges = badges => {\n  try {\n    localStorage.setItem(BADGES_KEY, JSON.stringify(badges));\n    return true;\n  } catch (error) {\n    console.error('Error saving badges:', error);\n    return false;\n  }\n};\n\n// Get badges\nconst getBadges = () => {\n  const badges = localStorage.getItem(BADGES_KEY);\n  return safelyParseJSON(badges) || [];\n};\n\n// Save simulation history\nconst saveSimulationHistory = history => {\n  try {\n    localStorage.setItem(SIMULATION_HISTORY_KEY, JSON.stringify(history));\n    return true;\n  } catch (error) {\n    console.error('Error saving simulation history:', error);\n    return false;\n  }\n};\n\n// Get simulation history\nconst getSimulationHistory = () => {\n  const history = localStorage.getItem(SIMULATION_HISTORY_KEY);\n  return safelyParseJSON(history) || [];\n};\n\n// Clear all user data\nconst clearAllData = () => {\n  try {\n    localStorage.removeItem(USER_DATA_KEY);\n    localStorage.removeItem(COMPLETED_TOPICS_KEY);\n    localStorage.removeItem(BADGES_KEY);\n    localStorage.removeItem(SIMULATION_HISTORY_KEY);\n    return true;\n  } catch (error) {\n    console.error('Error clearing user data:', error);\n    return false;\n  }\n};\nconst memoryService = {\n  saveUserData,\n  getUserData,\n  saveCompletedTopics,\n  getCompletedTopics,\n  saveBadges,\n  getBadges,\n  saveSimulationHistory,\n  getSimulationHistory,\n  clearAllData\n};\nexport { memoryService };","map":{"version":3,"names":["USER_DATA_KEY","COMPLETED_TOPICS_KEY","BADGES_KEY","SIMULATION_HISTORY_KEY","safelyParseJSON","json","JSON","parse","e","saveUserData","userData","localStorage","setItem","stringify","error","console","getUserData","getItem","saveCompletedTopics","topics","getCompletedTopics","saveBadges","badges","getBadges","saveSimulationHistory","history","getSimulationHistory","clearAllData","removeItem","memoryService"],"sources":["C:/Users/User/Documents/GitHub/LearnFi/learnfi/src/services/memoryService.js"],"sourcesContent":["// Memory service for storing user data locally\n// This could be replaced with mem0 or another service in the future\n\nconst USER_DATA_KEY = 'learnfi_user_data';\nconst COMPLETED_TOPICS_KEY = 'learnfi_completed_topics';\nconst BADGES_KEY = 'learnfi_badges';\nconst SIMULATION_HISTORY_KEY = 'learnfi_simulation_history';\n\n// Helper function to safely parse JSON\nconst safelyParseJSON = (json) => {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n};\n\n// Save user data to localStorage\nconst saveUserData = (userData) => {\n  try {\n    localStorage.setItem(USER_DATA_KEY, JSON.stringify(userData));\n    return true;\n  } catch (error) {\n    console.error('Error saving user data:', error);\n    return false;\n  }\n};\n\n// Get user data from localStorage\nconst getUserData = () => {\n  const userData = localStorage.getItem(USER_DATA_KEY);\n  return safelyParseJSON(userData);\n};\n\n// Save completed topics\nconst saveCompletedTopics = (topics) => {\n  try {\n    localStorage.setItem(COMPLETED_TOPICS_KEY, JSON.stringify(topics));\n    return true;\n  } catch (error) {\n    console.error('Error saving completed topics:', error);\n    return false;\n  }\n};\n\n// Get completed topics\nconst getCompletedTopics = () => {\n  const topics = localStorage.getItem(COMPLETED_TOPICS_KEY);\n  return safelyParseJSON(topics) || [];\n};\n\n// Save badges\nconst saveBadges = (badges) => {\n  try {\n    localStorage.setItem(BADGES_KEY, JSON.stringify(badges));\n    return true;\n  } catch (error) {\n    console.error('Error saving badges:', error);\n    return false;\n  }\n};\n\n// Get badges\nconst getBadges = () => {\n  const badges = localStorage.getItem(BADGES_KEY);\n  return safelyParseJSON(badges) || [];\n};\n\n// Save simulation history\nconst saveSimulationHistory = (history) => {\n  try {\n    localStorage.setItem(SIMULATION_HISTORY_KEY, JSON.stringify(history));\n    return true;\n  } catch (error) {\n    console.error('Error saving simulation history:', error);\n    return false;\n  }\n};\n\n// Get simulation history\nconst getSimulationHistory = () => {\n  const history = localStorage.getItem(SIMULATION_HISTORY_KEY);\n  return safelyParseJSON(history) || [];\n};\n\n// Clear all user data\nconst clearAllData = () => {\n  try {\n    localStorage.removeItem(USER_DATA_KEY);\n    localStorage.removeItem(COMPLETED_TOPICS_KEY);\n    localStorage.removeItem(BADGES_KEY);\n    localStorage.removeItem(SIMULATION_HISTORY_KEY);\n    return true;\n  } catch (error) {\n    console.error('Error clearing user data:', error);\n    return false;\n  }\n};\n\nconst memoryService = {\n  saveUserData,\n  getUserData,\n  saveCompletedTopics,\n  getCompletedTopics,\n  saveBadges,\n  getBadges,\n  saveSimulationHistory,\n  getSimulationHistory,\n  clearAllData\n};\n\nexport { memoryService };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}