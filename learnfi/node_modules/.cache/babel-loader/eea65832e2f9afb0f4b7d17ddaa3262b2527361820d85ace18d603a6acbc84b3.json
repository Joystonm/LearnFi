{"ast":null,"code":"// Memory service for storing user data locally\n\nconst USER_DATA_KEY = 'learnfi_user_data';\nconst COMPLETED_TOPICS_KEY = 'learnfi_completed_topics';\nconst BADGES_KEY = 'learnfi_badges';\nconst SIMULATION_HISTORY_KEY = 'learnfi_simulation_history';\n\n// Helper function to safely parse JSON\nconst safelyParseJSON = json => {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n};\n\n// Helper function to safely stringify JSON\nconst safelyStringifyJSON = data => {\n  try {\n    return JSON.stringify(data);\n  } catch (e) {\n    return null;\n  }\n};\n\n// Helper function to safely access localStorage\nconst safelyAccessLocalStorage = (operation, key, data = null) => {\n  try {\n    if (operation === 'get') {\n      return localStorage.getItem(key);\n    } else if (operation === 'set') {\n      localStorage.setItem(key, data);\n      return true;\n    } else if (operation === 'remove') {\n      localStorage.removeItem(key);\n      return true;\n    }\n    return null;\n  } catch (e) {\n    console.error(`Error accessing localStorage: ${e.message}`);\n    return null;\n  }\n};\n\n// Save user data to localStorage\nconst saveUserData = userData => {\n  const jsonData = safelyStringifyJSON(userData);\n  if (jsonData) {\n    return safelyAccessLocalStorage('set', USER_DATA_KEY, jsonData);\n  }\n  return false;\n};\n\n// Get user data from localStorage\nconst getUserData = () => {\n  const userData = safelyAccessLocalStorage('get', USER_DATA_KEY);\n  return safelyParseJSON(userData);\n};\n\n// Save completed topics\nconst saveCompletedTopics = topics => {\n  const jsonData = safelyStringifyJSON(topics);\n  if (jsonData) {\n    return safelyAccessLocalStorage('set', COMPLETED_TOPICS_KEY, jsonData);\n  }\n  return false;\n};\n\n// Get completed topics\nconst getCompletedTopics = () => {\n  const topics = safelyAccessLocalStorage('get', COMPLETED_TOPICS_KEY);\n  return safelyParseJSON(topics) || [];\n};\n\n// Save badges\nconst saveBadges = badges => {\n  const jsonData = safelyStringifyJSON(badges);\n  if (jsonData) {\n    return safelyAccessLocalStorage('set', BADGES_KEY, jsonData);\n  }\n  return false;\n};\n\n// Get badges\nconst getBadges = () => {\n  const badges = safelyAccessLocalStorage('get', BADGES_KEY);\n  return safelyParseJSON(badges) || [];\n};\n\n// Save simulation history\nconst saveSimulationHistory = history => {\n  const jsonData = safelyStringifyJSON(history);\n  if (jsonData) {\n    return safelyAccessLocalStorage('set', SIMULATION_HISTORY_KEY, jsonData);\n  }\n  return false;\n};\n\n// Get simulation history\nconst getSimulationHistory = () => {\n  const history = safelyAccessLocalStorage('get', SIMULATION_HISTORY_KEY);\n  return safelyParseJSON(history) || [];\n};\n\n// Clear all user data\nconst clearAllData = () => {\n  try {\n    safelyAccessLocalStorage('remove', USER_DATA_KEY);\n    safelyAccessLocalStorage('remove', COMPLETED_TOPICS_KEY);\n    safelyAccessLocalStorage('remove', BADGES_KEY);\n    safelyAccessLocalStorage('remove', SIMULATION_HISTORY_KEY);\n    return true;\n  } catch (error) {\n    console.error('Error clearing user data:', error);\n    return false;\n  }\n};\nexport const memoryService = {\n  saveUserData,\n  getUserData,\n  saveCompletedTopics,\n  getCompletedTopics,\n  saveBadges,\n  getBadges,\n  saveSimulationHistory,\n  getSimulationHistory,\n  clearAllData\n};","map":{"version":3,"names":["USER_DATA_KEY","COMPLETED_TOPICS_KEY","BADGES_KEY","SIMULATION_HISTORY_KEY","safelyParseJSON","json","JSON","parse","e","safelyStringifyJSON","data","stringify","safelyAccessLocalStorage","operation","key","localStorage","getItem","setItem","removeItem","console","error","message","saveUserData","userData","jsonData","getUserData","saveCompletedTopics","topics","getCompletedTopics","saveBadges","badges","getBadges","saveSimulationHistory","history","getSimulationHistory","clearAllData","memoryService"],"sources":["C:/Users/User/Documents/GitHub/LearnFi/learnfi/src/services/memoryService.js"],"sourcesContent":["// Memory service for storing user data locally\n\nconst USER_DATA_KEY = 'learnfi_user_data';\nconst COMPLETED_TOPICS_KEY = 'learnfi_completed_topics';\nconst BADGES_KEY = 'learnfi_badges';\nconst SIMULATION_HISTORY_KEY = 'learnfi_simulation_history';\n\n// Helper function to safely parse JSON\nconst safelyParseJSON = (json) => {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n};\n\n// Helper function to safely stringify JSON\nconst safelyStringifyJSON = (data) => {\n  try {\n    return JSON.stringify(data);\n  } catch (e) {\n    return null;\n  }\n};\n\n// Helper function to safely access localStorage\nconst safelyAccessLocalStorage = (operation, key, data = null) => {\n  try {\n    if (operation === 'get') {\n      return localStorage.getItem(key);\n    } else if (operation === 'set') {\n      localStorage.setItem(key, data);\n      return true;\n    } else if (operation === 'remove') {\n      localStorage.removeItem(key);\n      return true;\n    }\n    return null;\n  } catch (e) {\n    console.error(`Error accessing localStorage: ${e.message}`);\n    return null;\n  }\n};\n\n// Save user data to localStorage\nconst saveUserData = (userData) => {\n  const jsonData = safelyStringifyJSON(userData);\n  if (jsonData) {\n    return safelyAccessLocalStorage('set', USER_DATA_KEY, jsonData);\n  }\n  return false;\n};\n\n// Get user data from localStorage\nconst getUserData = () => {\n  const userData = safelyAccessLocalStorage('get', USER_DATA_KEY);\n  return safelyParseJSON(userData);\n};\n\n// Save completed topics\nconst saveCompletedTopics = (topics) => {\n  const jsonData = safelyStringifyJSON(topics);\n  if (jsonData) {\n    return safelyAccessLocalStorage('set', COMPLETED_TOPICS_KEY, jsonData);\n  }\n  return false;\n};\n\n// Get completed topics\nconst getCompletedTopics = () => {\n  const topics = safelyAccessLocalStorage('get', COMPLETED_TOPICS_KEY);\n  return safelyParseJSON(topics) || [];\n};\n\n// Save badges\nconst saveBadges = (badges) => {\n  const jsonData = safelyStringifyJSON(badges);\n  if (jsonData) {\n    return safelyAccessLocalStorage('set', BADGES_KEY, jsonData);\n  }\n  return false;\n};\n\n// Get badges\nconst getBadges = () => {\n  const badges = safelyAccessLocalStorage('get', BADGES_KEY);\n  return safelyParseJSON(badges) || [];\n};\n\n// Save simulation history\nconst saveSimulationHistory = (history) => {\n  const jsonData = safelyStringifyJSON(history);\n  if (jsonData) {\n    return safelyAccessLocalStorage('set', SIMULATION_HISTORY_KEY, jsonData);\n  }\n  return false;\n};\n\n// Get simulation history\nconst getSimulationHistory = () => {\n  const history = safelyAccessLocalStorage('get', SIMULATION_HISTORY_KEY);\n  return safelyParseJSON(history) || [];\n};\n\n// Clear all user data\nconst clearAllData = () => {\n  try {\n    safelyAccessLocalStorage('remove', USER_DATA_KEY);\n    safelyAccessLocalStorage('remove', COMPLETED_TOPICS_KEY);\n    safelyAccessLocalStorage('remove', BADGES_KEY);\n    safelyAccessLocalStorage('remove', SIMULATION_HISTORY_KEY);\n    return true;\n  } catch (error) {\n    console.error('Error clearing user data:', error);\n    return false;\n  }\n};\n\nexport const memoryService = {\n  saveUserData,\n  getUserData,\n  saveCompletedTopics,\n  getCompletedTopics,\n  saveBadges,\n  getBadges,\n  saveSimulationHistory,\n  getSimulationHistory,\n  clearAllData\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}