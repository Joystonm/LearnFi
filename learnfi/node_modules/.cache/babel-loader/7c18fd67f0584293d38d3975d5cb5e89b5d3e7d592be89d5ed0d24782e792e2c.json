{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nexports.__esModule = true;\nexports.toChecksumAddress = exports.netId = void 0;\nvar ethers_1 = require(\"ethers\");\n/**\n * This function acts like a decorator for all methods that interact with the\n *     blockchain. In order to use the correct Compound Protocol addresses, the\n *     Compound.js SDK must know which network its provider points to. This\n *     function holds up a transaction until the main constructor has determined\n *     the network ID.\n *\n * @hidden\n *\n * @param {Compound} _compound The instance of the Compound.js SDK.\n *\n */\nfunction netId(_compound) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!_compound._networkPromise) return [3 /*break*/, 2];\n          return [4 /*yield*/, _compound._networkPromise];\n        case 1:\n          _a.sent();\n          _a.label = 2;\n        case 2:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\nexports.netId = netId;\nvar keccak256 = ethers_1.ethers.utils.keccak256;\n/**\n * Applies the EIP-55 checksum to an Ethereum address.\n *\n * @hidden\n *\n * @param {string} _address The Ethereum address to apply the checksum.\n *\n * @returns {string} Returns a string of the Ethereum address.\n */\nfunction toChecksumAddress(_address) {\n  var chars = _address.toLowerCase().substring(2).split('');\n  var expanded = new Uint8Array(40);\n  for (var i = 0; i < 40; i++) {\n    expanded[i] = chars[i].charCodeAt(0);\n  }\n  var hash = keccak256(expanded);\n  var ret = '';\n  for (var i = 0; i < _address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += _address[i].toUpperCase();\n    } else {\n      ret += _address[i];\n    }\n  }\n  return ret;\n}\nexports.toChecksumAddress = toChecksumAddress;","map":{"version":3,"names":["ethers_1","require","netId","_compound","_networkPromise","_a","sent","exports","keccak256","ethers","utils","toChecksumAddress","_address","chars","toLowerCase","substring","split","expanded","Uint8Array","i","charCodeAt","hash","ret","length","parseInt","toUpperCase"],"sources":["../../src/helpers.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAGA;;;;;;;;;;;;AAYA,SAAsBC,KAAKA,CAACC,SAA2B;;;;;eACjDA,SAAS,CAACC,eAAe,EAAzB;UACF,qBAAMD,SAAS,CAACC,eAAe;;UAA/BC,EAAA,CAAAC,IAAA,EAA+B;;;;;;;;AAFnCC,OAAA,CAAAL,KAAA,GAAAA,KAAA;AAMA,IAAMM,SAAS,GAAGR,QAAA,CAAAS,MAAM,CAACC,KAAK,CAACF,SAAS;AAExC;;;;;;;;;AASA,SAAgBG,iBAAiBA,CAACC,QAAgB;EAChD,IAAMC,KAAK,GAAGD,QAAQ,CAACE,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC;EAC3D,IAAMC,QAAQ,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC;EAEnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3BF,QAAQ,CAACE,CAAC,CAAC,GAAGN,KAAK,CAACM,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC;;EAGtC,IAAMC,IAAI,GAAGb,SAAS,CAACS,QAAQ,CAAC;EAChC,IAAIK,GAAG,GAAG,EAAE;EAEZ,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,CAACW,MAAM,EAAEJ,CAAC,EAAE,EAAE;IACxC,IAAIK,QAAQ,CAACH,IAAI,CAACF,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;MAC9BG,GAAG,IAAIV,QAAQ,CAACO,CAAC,CAAC,CAACM,WAAW,EAAE;KACjC,MAAM;MACLH,GAAG,IAAIV,QAAQ,CAACO,CAAC,CAAC;;;EAItB,OAAOG,GAAG;AACZ;AApBAf,OAAA,CAAAI,iBAAA,GAAAA,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}