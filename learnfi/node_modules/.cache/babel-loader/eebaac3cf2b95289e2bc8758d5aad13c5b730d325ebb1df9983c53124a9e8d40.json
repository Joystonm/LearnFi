{"ast":null,"code":"\"use strict\";\n\n/**\n * @file Comptroller\n * @desc These methods facilitate interactions with the Comptroller smart\n *     contract. Methods like `claimComp` are in the Governance/COMP section.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nexports.__esModule = true;\nexports.exitMarket = exports.enterMarkets = void 0;\nvar eth = require(\"./eth\");\nvar helpers_1 = require(\"./helpers\");\nvar constants_1 = require(\"./constants\");\n/**\n * Enters the user's address into Compound Protocol markets.\n *\n * @param {any[]} markets An array of strings of markets to enter, meaning use\n *     those supplied assets as collateral.\n * @param {CallOptions} [options] Call options and Ethers.js overrides for the\n *     transaction. A passed `gasLimit` will be used in both the `approve` (if\n *     not supressed) and `mint` transactions.\n *\n * @returns {object} Returns an Ethers.js transaction object of the enterMarkets\n *     transaction.\n *\n * @example\n *\n * ```\n * const compound = new Compound(window.ethereum);\n *\n * (async function () {\n *   const trx = await compound.enterMarkets(Compound.ETH); // Use [] for multiple\n *   console.log('Ethers.js transaction object', trx);\n * })().catch(console.error);\n * ```\n */\nfunction enterMarkets(markets, options) {\n  if (markets === void 0) {\n    markets = [];\n  }\n  if (options === void 0) {\n    options = {};\n  }\n  return __awaiter(this, void 0, void 0, function () {\n    var errorPrefix, addresses, i, comptrollerAddress, parameters, trxOptions;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, helpers_1.netId(this)];\n        case 1:\n          _a.sent();\n          errorPrefix = 'Compound [enterMarkets] | ';\n          if (typeof markets === 'string') {\n            markets = [markets];\n          }\n          if (!Array.isArray(markets)) {\n            throw Error(errorPrefix + 'Argument `markets` must be an array or string.');\n          }\n          addresses = [];\n          for (i = 0; i < markets.length; i++) {\n            if (markets[i][0] !== 'c') {\n              markets[i] = 'c' + markets[i];\n            }\n            if (!constants_1.cTokens.includes(markets[i])) {\n              throw Error(errorPrefix + 'Provided market `' + markets[i] + '` is not a recognized cToken.');\n            }\n            addresses.push(constants_1.address[this._network.name][markets[i]]);\n          }\n          comptrollerAddress = constants_1.address[this._network.name].Comptroller;\n          parameters = [addresses];\n          trxOptions = __assign({\n            _compoundProvider: this._provider,\n            abi: constants_1.abi.Comptroller\n          }, options);\n          return [2 /*return*/, eth.trx(comptrollerAddress, 'enterMarkets', parameters, trxOptions)];\n      }\n    });\n  });\n}\nexports.enterMarkets = enterMarkets;\n/**\n * Exits the user's address from a Compound Protocol market.\n *\n * @param {string} market A string of the symbol of the market to exit.\n * @param {CallOptions} [options] Call options and Ethers.js overrides for the\n *     transaction. A passed `gasLimit` will be used in both the `approve` (if\n *     not supressed) and `mint` transactions.\n *\n * @returns {object} Returns an Ethers.js transaction object of the exitMarket\n *     transaction.\n *\n * @example\n *\n * ```\n * const compound = new Compound(window.ethereum);\n *\n * (async function () {\n *   const trx = await compound.exitMarket(Compound.ETH);\n *   console.log('Ethers.js transaction object', trx);\n * })().catch(console.error);\n * ```\n */\nfunction exitMarket(market, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return __awaiter(this, void 0, void 0, function () {\n    var errorPrefix, cTokenAddress, comptrollerAddress, parameters, trxOptions;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, helpers_1.netId(this)];\n        case 1:\n          _a.sent();\n          errorPrefix = 'Compound [exitMarket] | ';\n          if (typeof market !== 'string' || market === '') {\n            throw Error(errorPrefix + 'Argument `market` must be a string of a cToken market name.');\n          }\n          if (market[0] !== 'c') {\n            market = 'c' + market;\n          }\n          if (!constants_1.cTokens.includes(market)) {\n            throw Error(errorPrefix + 'Provided market `' + market + '` is not a recognized cToken.');\n          }\n          cTokenAddress = constants_1.address[this._network.name][market];\n          comptrollerAddress = constants_1.address[this._network.name].Comptroller;\n          parameters = [cTokenAddress];\n          trxOptions = __assign({\n            _compoundProvider: this._provider,\n            abi: constants_1.abi.Comptroller\n          }, options);\n          return [2 /*return*/, eth.trx(comptrollerAddress, 'exitMarket', parameters, trxOptions)];\n      }\n    });\n  });\n}\nexports.exitMarket = exitMarket;","map":{"version":3,"names":["eth","require","helpers_1","constants_1","enterMarkets","markets","options","netId","_a","sent","errorPrefix","Array","isArray","Error","addresses","i","length","cTokens","includes","push","address","_network","name","comptrollerAddress","Comptroller","parameters","trxOptions","__assign","_compoundProvider","_provider","abi","trx","exports","exitMarket","market","cTokenAddress"],"sources":["../../src/comptroller.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}