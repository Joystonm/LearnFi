{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\LearnFi\\\\learnfi\\\\src\\\\components\\\\BadgeReward.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport TooltipExplainer from './TooltipExplainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BadgeReward = ({\n  badge,\n  isNew = false\n}) => {\n  _s();\n  const badgeRef = useRef(null);\n\n  // Animate badge when it's new\n  useEffect(() => {\n    if (isNew && badgeRef.current) {\n      // Create a timeline for the badge animation\n      const tl = gsap.timeline({\n        defaults: {\n          ease: \"elastic.out(1.2, 0.5)\"\n        }\n      });\n      tl.from(badgeRef.current, {\n        scale: 0.5,\n        opacity: 0,\n        rotation: -10,\n        duration: 1.2\n      }).to(badgeRef.current, {\n        y: -10,\n        duration: 0.5,\n        repeat: 3,\n        yoyo: true\n      }, \"-=0.2\");\n    }\n  }, [isNew]);\n\n  // Get badge details based on type\n  const getBadgeDetails = () => {\n    switch (badge.type) {\n      case 'completion':\n        return {\n          bgColor: 'bg-blue-100',\n          borderColor: 'border-blue-300',\n          textColor: 'text-blue-800',\n          icon: 'üéì'\n        };\n      case 'quiz':\n        return {\n          bgColor: 'bg-green-100',\n          borderColor: 'border-green-300',\n          textColor: 'text-green-800',\n          icon: 'üß†'\n        };\n      case 'simulation':\n        return {\n          bgColor: 'bg-purple-100',\n          borderColor: 'border-purple-300',\n          textColor: 'text-purple-800',\n          icon: 'üß™'\n        };\n      case 'achievement':\n        return {\n          bgColor: 'bg-yellow-100',\n          borderColor: 'border-yellow-300',\n          textColor: 'text-yellow-800',\n          icon: 'üèÜ'\n        };\n      default:\n        return {\n          bgColor: 'bg-gray-100',\n          borderColor: 'border-gray-300',\n          textColor: 'text-gray-800',\n          icon: 'üéØ'\n        };\n    }\n  };\n  const badgeDetails = getBadgeDetails();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: badgeRef,\n    className: `relative flex flex-col items-center p-4 rounded-lg border-2 ${badgeDetails.borderColor} ${badgeDetails.bgColor} text-center`,\n    children: [isNew && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center\",\n      children: \"New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-3xl mb-2\",\n      children: badgeDetails.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: `font-medium text-sm ${badgeDetails.textColor}`,\n      children: badge.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: /*#__PURE__*/_jsxDEV(TooltipExplainer, {\n        content: badge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(BadgeReward, \"WvdLj3nOAoOWJHS/mnOEWWw2onA=\");\n_c = BadgeReward;\nexport default BadgeReward;\nvar _c;\n$RefreshReg$(_c, \"BadgeReward\");","map":{"version":3,"names":["React","useEffect","useRef","gsap","TooltipExplainer","jsxDEV","_jsxDEV","BadgeReward","badge","isNew","_s","badgeRef","current","tl","timeline","defaults","ease","from","scale","opacity","rotation","duration","to","y","repeat","yoyo","getBadgeDetails","type","bgColor","borderColor","textColor","icon","badgeDetails","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","content","description","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/LearnFi/learnfi/src/components/BadgeReward.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport TooltipExplainer from './TooltipExplainer';\n\nconst BadgeReward = ({ badge, isNew = false }) => {\n  const badgeRef = useRef(null);\n  \n  // Animate badge when it's new\n  useEffect(() => {\n    if (isNew && badgeRef.current) {\n      // Create a timeline for the badge animation\n      const tl = gsap.timeline({ defaults: { ease: \"elastic.out(1.2, 0.5)\" } });\n      \n      tl.from(badgeRef.current, { \n        scale: 0.5, \n        opacity: 0, \n        rotation: -10,\n        duration: 1.2\n      })\n      .to(badgeRef.current, {\n        y: -10,\n        duration: 0.5,\n        repeat: 3,\n        yoyo: true\n      }, \"-=0.2\");\n    }\n  }, [isNew]);\n  \n  // Get badge details based on type\n  const getBadgeDetails = () => {\n    switch (badge.type) {\n      case 'completion':\n        return {\n          bgColor: 'bg-blue-100',\n          borderColor: 'border-blue-300',\n          textColor: 'text-blue-800',\n          icon: 'üéì'\n        };\n      case 'quiz':\n        return {\n          bgColor: 'bg-green-100',\n          borderColor: 'border-green-300',\n          textColor: 'text-green-800',\n          icon: 'üß†'\n        };\n      case 'simulation':\n        return {\n          bgColor: 'bg-purple-100',\n          borderColor: 'border-purple-300',\n          textColor: 'text-purple-800',\n          icon: 'üß™'\n        };\n      case 'achievement':\n        return {\n          bgColor: 'bg-yellow-100',\n          borderColor: 'border-yellow-300',\n          textColor: 'text-yellow-800',\n          icon: 'üèÜ'\n        };\n      default:\n        return {\n          bgColor: 'bg-gray-100',\n          borderColor: 'border-gray-300',\n          textColor: 'text-gray-800',\n          icon: 'üéØ'\n        };\n    }\n  };\n  \n  const badgeDetails = getBadgeDetails();\n  \n  return (\n    <div \n      ref={badgeRef}\n      className={`relative flex flex-col items-center p-4 rounded-lg border-2 ${badgeDetails.borderColor} ${badgeDetails.bgColor} text-center`}\n    >\n      {isNew && (\n        <div className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center\">\n          New\n        </div>\n      )}\n      \n      <div className=\"text-3xl mb-2\">{badgeDetails.icon}</div>\n      <h3 className={`font-medium text-sm ${badgeDetails.textColor}`}>{badge.name}</h3>\n      \n      <div className=\"mt-2\">\n        <TooltipExplainer content={badge.description} />\n      </div>\n    </div>\n  );\n};\n\nexport default BadgeReward;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}