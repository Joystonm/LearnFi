{"ast":null,"code":"\"use strict\";\n\n/**\n * @file Governance\n * @desc These methods facilitate interactions with the Governor smart contract.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nexports.__esModule = true;\nexports.castVoteWithReason = exports.createVoteSignature = exports.castVoteBySig = exports.castVote = void 0;\nvar eth = require(\"./eth\");\nvar helpers_1 = require(\"./helpers\");\nvar constants_1 = require(\"./constants\");\nvar EIP712_1 = require(\"./EIP712\");\n/**\n * Submit a vote on a Compound Governance proposal.\n *\n * @param {string} proposalId The ID of the proposal to vote on. This is an\n *     auto-incrementing integer in the Governor contract.\n * @param {number} support A number value of 0, 1, or 2 for the proposal vote.\n *     The numbers correspond to 'in-favor', 'against', and 'abstain'\n *     respectively.\n * @param {CallOptions} [options] Options to set for a transaction and Ethers.js\n *     method overrides.\n *\n * @returns {object} Returns an Ethers.js transaction object of the vote\n *     transaction.\n *\n * @example\n *\n * ```\n * const compound = new Compound(window.ethereum);\n *\n * (async function() {\n *   const castVoteTx = await compound.castVote(12, 1);\n *   console.log('Ethers.js transaction object', castVoteTx);\n * })().catch(console.error);\n * ```\n */\nfunction castVote(proposalId, support, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return __awaiter(this, void 0, void 0, function () {\n    var errorPrefix, governorAddress, trxOptions, parameters, method;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, helpers_1.netId(this)];\n        case 1:\n          _a.sent();\n          errorPrefix = 'Compound [castVote] | ';\n          if (typeof proposalId !== 'number') {\n            throw Error(errorPrefix + 'Argument `proposalId` must be an integer.');\n          }\n          if (typeof support !== 'number') {\n            throw Error(errorPrefix + 'Argument `support` must be an integer (0, 1, or 2).');\n          }\n          governorAddress = constants_1.address[this._network.name].GovernorBravo;\n          trxOptions = options;\n          trxOptions._compoundProvider = this._provider;\n          trxOptions.abi = constants_1.abi.GovernorBravo;\n          parameters = [proposalId, support];\n          method = 'castVote';\n          return [2 /*return*/, eth.trx(governorAddress, method, parameters, trxOptions)];\n      }\n    });\n  });\n}\nexports.castVote = castVote;\n/**\n * Submit a vote on a Compound Governance proposal using an EIP-712 signature.\n *\n * @param {string} proposalId The ID of the proposal to vote on. This is an\n *     auto-incrementing integer in the Governor contract.\n * @param {number} support A number value of 0, 1, or 2 for the proposal vote.\n *     The numbers correspond to 'in-favor', 'against', and 'abstain'\n *     respectively.\n * @param {object} signature An object that contains the v, r, and, s values of\n *     an EIP-712 signature.\n * @param {CallOptions} [options] Options to set for a transaction and Ethers.js\n *     method overrides.\n *\n * @returns {object} Returns an Ethers.js transaction object of the vote\n *     transaction.\n *\n * @example\n * ```\n * const compound = new Compound(window.ethereum);\n *\n * (async function() {\n *   const castVoteTx = await compound.castVoteBySig(\n *     12,\n *     1,\n *     {\n *       v: '0x1b',\n *       r: '0x130dbcd2faca07424c033b4479687cc1deeb65f08509e3ab397988cc4c6f2e78',\n *       s: '0x1debcb8250262f23906b1177161f0c7c9aa3641e6bff5b6f5c88a6bb78d5d8cd'\n *     }\n *   );\n *   console.log('Ethers.js transaction object', castVoteTx);\n * })().catch(console.error);\n * ```\n */\nfunction castVoteBySig(proposalId, support, signature, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return __awaiter(this, void 0, void 0, function () {\n    var errorPrefix, governorAddress, trxOptions, v, r, s, parameters, method;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, helpers_1.netId(this)];\n        case 1:\n          _a.sent();\n          errorPrefix = 'Compound [castVoteBySig] | ';\n          if (typeof proposalId !== 'number') {\n            throw Error(errorPrefix + 'Argument `proposalId` must be an integer.');\n          }\n          if (typeof support !== 'number') {\n            throw Error(errorPrefix + 'Argument `support` must be an integer (0, 1, or 2).');\n          }\n          if (!Object.isExtensible(signature) || !signature.v || !signature.r || !signature.s) {\n            throw Error(errorPrefix + 'Argument `signature` must be an object that ' + 'contains the v, r, and s pieces of an EIP-712 signature.');\n          }\n          governorAddress = constants_1.address[this._network.name].GovernorBravo;\n          trxOptions = options;\n          trxOptions._compoundProvider = this._provider;\n          trxOptions.abi = constants_1.abi.GovernorBravo;\n          v = signature.v, r = signature.r, s = signature.s;\n          parameters = [proposalId, support, v, r, s];\n          method = 'castVoteBySig';\n          return [2 /*return*/, eth.trx(governorAddress, method, parameters, trxOptions)];\n      }\n    });\n  });\n}\nexports.castVoteBySig = castVoteBySig;\n/**\n * Create a vote signature for a Compound Governance proposal using EIP-712.\n *     This can be used to create an 'empty ballot' without burning gas. The\n *     signature can then be sent to someone else to post to the blockchain.\n *     The recipient can post one signature using the `castVoteBySig` method.\n *\n * @param {string} proposalId The ID of the proposal to vote on. This is an\n *     auto-incrementing integer in the Governor contract.\n * @param {number} support A number value of 0, 1, or 2 for the proposal vote.\n *     The numbers correspond to 'in-favor', 'against', and 'abstain'\n *     respectively. To create an 'empty ballot' call this method thrice using\n *     `0`, `1`, and then `2` for this parameter.\n *\n * @returns {object} Returns an object that contains the `v`, `r`, and `s`\n *     components of an Ethereum signature as hexadecimal strings.\n *\n * @example\n * ```\n * const compound = new Compound(window.ethereum);\n *\n * (async () => {\n *\n *   const voteForSignature = await compound.createVoteSignature(20, 1);\n *   console.log('voteForSignature', voteForSignature);\n *\n *   const voteAgainstSignature = await compound.createVoteSignature(20, 0);\n *   console.log('voteAgainstSignature', voteAgainstSignature);\n *\n * })().catch(console.error);\n * ```\n */\nfunction createVoteSignature(proposalId, support) {\n  return __awaiter(this, void 0, void 0, function () {\n    var provider, governorAddress, chainId, domain, primaryType, message, types, signer, signature;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, helpers_1.netId(this)];\n        case 1:\n          _a.sent();\n          provider = this._provider;\n          governorAddress = constants_1.address[this._network.name].GovernorBravo;\n          chainId = this._network.id;\n          domain = {\n            name: 'Compound Governor Bravo',\n            chainId: chainId,\n            verifyingContract: governorAddress\n          };\n          primaryType = 'Ballot';\n          message = {\n            proposalId: proposalId,\n            support: support\n          };\n          types = {\n            EIP712Domain: [{\n              name: 'name',\n              type: 'string'\n            }, {\n              name: 'chainId',\n              type: 'uint256'\n            }, {\n              name: 'verifyingContract',\n              type: 'address'\n            }],\n            Ballot: [{\n              name: 'proposalId',\n              type: 'uint256'\n            }, {\n              name: 'support',\n              type: 'uint8'\n            }]\n          };\n          signer = provider.getSigner ? provider.getSigner() : provider;\n          return [4 /*yield*/, EIP712_1.sign(domain, primaryType, message, types, signer)];\n        case 2:\n          signature = _a.sent();\n          return [2 /*return*/, signature];\n      }\n    });\n  });\n}\nexports.createVoteSignature = createVoteSignature;\n/**\n * Submit a Compound Governance proposal vote with a reason.\n *\n * @param {string} proposalId The ID of the proposal to vote on. This is an\n *     auto-incrementing integer in the Governor contract.\n * @param {number} support A number value of 0, 1, or 2 for the proposal vote.\n *     The numbers correspond to 'in-favor', 'against', and 'abstain'\n *     respectively.\n * @param {string} reason A string of the reason for a vote selection.\n * @param {CallOptions} [options] Options to set for a transaction and Ethers.js\n *     method overrides.\n *\n * @returns {object} Returns an Ethers.js transaction object of the vote\n *     transaction.\n *\n * @example\n *\n * ```\n * const compound = new Compound(window.ethereum);\n *\n * (async function() {\n *   const castVoteTx = await compound.castVoteWithReason(12, 1, 'I vote YES because...');\n *   console.log('Ethers.js transaction object', castVoteTx);\n * })().catch(console.error);\n * ```\n */\nfunction castVoteWithReason(proposalId, support, reason, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return __awaiter(this, void 0, void 0, function () {\n    var errorPrefix, governorAddress, trxOptions, parameters, method;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, helpers_1.netId(this)];\n        case 1:\n          _a.sent();\n          errorPrefix = 'Compound [castVoteWithReason] | ';\n          if (typeof proposalId !== 'number') {\n            throw Error(errorPrefix + 'Argument `proposalId` must be an integer.');\n          }\n          if (typeof support !== 'number') {\n            throw Error(errorPrefix + 'Argument `support` must be an integer (0, 1, or 2).');\n          }\n          if (typeof reason !== 'string') {\n            throw Error(errorPrefix + 'Argument `reason` must be a string.');\n          }\n          governorAddress = constants_1.address[this._network.name].GovernorBravo;\n          trxOptions = options;\n          trxOptions._compoundProvider = this._provider;\n          trxOptions.abi = constants_1.abi.GovernorBravo;\n          parameters = [proposalId, support, reason];\n          method = 'castVoteWithReason';\n          return [2 /*return*/, eth.trx(governorAddress, method, parameters, trxOptions)];\n      }\n    });\n  });\n}\nexports.castVoteWithReason = castVoteWithReason;","map":{"version":3,"names":["eth","require","helpers_1","constants_1","EIP712_1","castVote","proposalId","support","options","netId","_a","sent","errorPrefix","Error","governorAddress","address","_network","name","GovernorBravo","trxOptions","_compoundProvider","_provider","abi","parameters","method","trx","exports","castVoteBySig","signature","Object","isExtensible","v","r","s","createVoteSignature","provider","chainId","id","domain","verifyingContract","primaryType","message","types","EIP712Domain","type","Ballot","signer","getSigner","sign","castVoteWithReason","reason"],"sources":["../../src/gov.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAAA,GAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAsBI,QAAQA,CAC5BC,UAAkB,EAClBC,OAAe,EACfC,OAAyB;EAAzB,IAAAA,OAAA;IAAAA,OAAA,KAAyB;EAAA;;;;;;UAEzB,qBAAMN,SAAA,CAAAO,KAAK,CAAC,IAAI,CAAC;;UAAjBC,EAAA,CAAAC,IAAA,EAAiB;UAEXC,WAAW,GAAG,wBAAwB;UAE5C,IAAI,OAAON,UAAU,KAAK,QAAQ,EAAE;YAClC,MAAMO,KAAK,CAACD,WAAW,GAAG,2CAA2C,CAAC;;UAGxE,IAAI,OAAOL,OAAO,KAAK,QAAQ,EAAE;YAC/B,MAAMM,KAAK,CAACD,WAAW,GAAG,qDAAqD,CAAC;;UAG5EE,eAAe,GAAGX,WAAA,CAAAY,OAAO,CAAC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,aAAa;UAC3DC,UAAU,GAAgBX,OAAO;UACvCW,UAAU,CAACC,iBAAiB,GAAI,IAAI,CAACC,SAAS;UAC9CF,UAAU,CAACG,GAAG,GAAInB,WAAA,CAAAmB,GAAG,CAACJ,aAAa;UAC7BK,UAAU,GAAG,CAAEjB,UAAU,EAAEC,OAAO,CAAE;UACpCiB,MAAM,GAAG,UAAU;UAEzB,sBAAOxB,GAAG,CAACyB,GAAG,CAACX,eAAe,EAAEU,MAAM,EAAED,UAAU,EAAEJ,UAAU,CAAC;;;;;AAxBjEO,OAAA,CAAArB,QAAA,GAAAA,QAAA;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAsBsB,aAAaA,CACjCrB,UAAkB,EAClBC,OAAe,EACfqB,SAAoB,EACpBpB,OAAyB;EAAzB,IAAAA,OAAA;IAAAA,OAAA,KAAyB;EAAA;;;;;;UAEzB,qBAAMN,SAAA,CAAAO,KAAK,CAAC,IAAI,CAAC;;UAAjBC,EAAA,CAAAC,IAAA,EAAiB;UAEXC,WAAW,GAAG,6BAA6B;UAEjD,IAAI,OAAON,UAAU,KAAK,QAAQ,EAAE;YAClC,MAAMO,KAAK,CAACD,WAAW,GAAG,2CAA2C,CAAC;;UAGxE,IAAI,OAAOL,OAAO,KAAK,QAAQ,EAAE;YAC/B,MAAMM,KAAK,CAACD,WAAW,GAAG,qDAAqD,CAAC;;UAGlF,IACE,CAACiB,MAAM,CAACC,YAAY,CAACF,SAAS,CAAC,IAC/B,CAACA,SAAS,CAACG,CAAC,IACZ,CAACH,SAAS,CAACI,CAAC,IACZ,CAACJ,SAAS,CAACK,CAAC,EACZ;YACA,MAAMpB,KAAK,CAACD,WAAW,GAAG,8CAA8C,GACtE,0DAA0D,CAAC;;UAGzDE,eAAe,GAAGX,WAAA,CAAAY,OAAO,CAAC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,aAAa;UAC3DC,UAAU,GAAgBX,OAAO;UACvCW,UAAU,CAACC,iBAAiB,GAAG,IAAI,CAACC,SAAS;UAC7CF,UAAU,CAACG,GAAG,GAAGnB,WAAA,CAAAmB,GAAG,CAACJ,aAAa;UAC1Ba,CAAC,GAAWH,SAAS,CAAAG,CAApB,EAAEC,CAAC,GAAQJ,SAAS,CAAAI,CAAjB,EAAEC,CAAC,GAAKL,SAAS,CAAAK,CAAd;UACTV,UAAU,GAAG,CAAEjB,UAAU,EAAEC,OAAO,EAAEwB,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAE;UAC7CT,MAAM,GAAG,eAAe;UAE9B,sBAAOxB,GAAG,CAACyB,GAAG,CAACX,eAAe,EAAEU,MAAM,EAAED,UAAU,EAAEJ,UAAU,CAAC;;;;;AApCjEO,OAAA,CAAAC,aAAA,GAAAA,aAAA;AAuCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,SAAsBO,mBAAmBA,CACvC5B,UAAkB,EAClBC,OAAe;;;;;;UAEf,qBAAML,SAAA,CAAAO,KAAK,CAAC,IAAI,CAAC;;UAAjBC,EAAA,CAAAC,IAAA,EAAiB;UAEXwB,QAAQ,GAAG,IAAI,CAACd,SAAS;UACzBP,eAAe,GAAGX,WAAA,CAAAY,OAAO,CAAC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,aAAa;UAC3DkB,OAAO,GAAG,IAAI,CAACpB,QAAQ,CAACqB,EAAE;UAE1BC,MAAM,GAAiB;YAC3BrB,IAAI,EAAE,yBAAyB;YAC/BmB,OAAO,EAAAA,OAAA;YACPG,iBAAiB,EAAEzB;WACpB;UAEK0B,WAAW,GAAG,QAAQ;UAEtBC,OAAO,GAAyB;YAAEnC,UAAU,EAAAA,UAAA;YAAEC,OAAO,EAAAA;UAAA,CAAE;UAEvDmC,KAAK,GAAc;YACvBC,YAAY,EAAE,CACZ;cAAE1B,IAAI,EAAE,MAAM;cAAE2B,IAAI,EAAE;YAAQ,CAAE,EAChC;cAAE3B,IAAI,EAAE,SAAS;cAAE2B,IAAI,EAAE;YAAS,CAAE,EACpC;cAAE3B,IAAI,EAAE,mBAAmB;cAAE2B,IAAI,EAAE;YAAS,CAAE,CAC/C;YACDC,MAAM,EAAE,CACN;cAAE5B,IAAI,EAAE,YAAY;cAAE2B,IAAI,EAAE;YAAS,CAAE,EACvC;cAAE3B,IAAI,EAAE,SAAS;cAAE2B,IAAI,EAAE;YAAO,CAAE;WAErC;UAEKE,MAAM,GAAGX,QAAQ,CAACY,SAAS,GAAGZ,QAAQ,CAACY,SAAS,EAAE,GAAGZ,QAAQ;UAEjD,qBAAM/B,QAAA,CAAA4C,IAAI,CAACV,MAAM,EAAEE,WAAW,EAAEC,OAAO,EAAEC,KAAK,EAAEI,MAAM,CAAC;;UAAnElB,SAAS,GAAGlB,EAAA,CAAAC,IAAA,EAAuD;UAEzE,sBAAOiB,SAAS;;;;;AApClBF,OAAA,CAAAQ,mBAAA,GAAAA,mBAAA;AAuCA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAsBe,kBAAkBA,CACtC3C,UAAkB,EAClBC,OAAe,EACf2C,MAAc,EACd1C,OAAyB;EAAzB,IAAAA,OAAA;IAAAA,OAAA,KAAyB;EAAA;;;;;;UAEzB,qBAAMN,SAAA,CAAAO,KAAK,CAAC,IAAI,CAAC;;UAAjBC,EAAA,CAAAC,IAAA,EAAiB;UAEXC,WAAW,GAAG,kCAAkC;UAEtD,IAAI,OAAON,UAAU,KAAK,QAAQ,EAAE;YAClC,MAAMO,KAAK,CAACD,WAAW,GAAG,2CAA2C,CAAC;;UAGxE,IAAI,OAAOL,OAAO,KAAK,QAAQ,EAAE;YAC/B,MAAMM,KAAK,CAACD,WAAW,GAAG,qDAAqD,CAAC;;UAGlF,IAAI,OAAOsC,MAAM,KAAK,QAAQ,EAAE;YAC9B,MAAMrC,KAAK,CAACD,WAAW,GAAG,qCAAqC,CAAC;;UAG5DE,eAAe,GAAGX,WAAA,CAAAY,OAAO,CAAC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,aAAa;UAC3DC,UAAU,GAAgBX,OAAO;UACvCW,UAAU,CAACC,iBAAiB,GAAI,IAAI,CAACC,SAAS;UAC9CF,UAAU,CAACG,GAAG,GAAInB,WAAA,CAAAmB,GAAG,CAACJ,aAAa;UAC7BK,UAAU,GAAG,CAAEjB,UAAU,EAAEC,OAAO,EAAE2C,MAAM,CAAE;UAC5C1B,MAAM,GAAG,oBAAoB;UAEnC,sBAAOxB,GAAG,CAACyB,GAAG,CAACX,eAAe,EAAEU,MAAM,EAAED,UAAU,EAAEJ,UAAU,CAAC;;;;;AA7BjEO,OAAA,CAAAuB,kBAAA,GAAAA,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}