{"ast":null,"code":"import Compound from '@compound-finance/compound-js';\nimport config from '../config';\n\n// Initialize Compound with the network from config\nconst compound = new Compound(config.compoundNetwork);\n\n// Get all markets data\nconst getMarkets = async () => {\n  try {\n    // Get all cToken addresses\n    const cTokens = await compound.api.account({\n      \"addresses\": [],\n      \"network\": config.compoundNetwork\n    });\n    if (!cTokens.cTokens) {\n      throw new Error('Failed to fetch cToken data');\n    }\n\n    // Map cTokens to a more usable format\n    const markets = cTokens.cTokens.map(cToken => {\n      var _underlying$price;\n      const underlying = cToken.underlying || {};\n      const symbol = underlying.symbol || cToken.symbol.replace('c', '');\n      return {\n        symbol,\n        name: underlying.name || symbol,\n        address: cToken.address,\n        cTokenSymbol: cToken.symbol,\n        supplyApy: parseFloat(cToken.supply_rate.value) * 100,\n        borrowApy: parseFloat(cToken.borrow_rate.value) * 100,\n        price: parseFloat(((_underlying$price = underlying.price) === null || _underlying$price === void 0 ? void 0 : _underlying$price.value) || 0),\n        totalSupply: parseFloat(cToken.total_supply.value) || 0,\n        totalBorrow: parseFloat(cToken.total_borrow.value) || 0,\n        collateralFactor: parseFloat(cToken.collateral_factor.value) || 0,\n        exchangeRate: parseFloat(cToken.exchange_rate.value) || 0,\n        underlyingDecimals: parseInt(underlying.decimals) || 18\n      };\n    });\n    return markets;\n  } catch (error) {\n    console.error('Error fetching Compound markets:', error);\n\n    // If in development mode, return mock data\n    if (config.isDevelopment) {\n      return getMockMarkets();\n    }\n    throw error;\n  }\n};\n\n// Get specific market data\nconst getMarket = async symbol => {\n  try {\n    const markets = await getMarkets();\n    return markets.find(market => market.symbol === symbol);\n  } catch (error) {\n    console.error(`Error fetching market data for ${symbol}:`, error);\n    throw error;\n  }\n};\n\n// Calculate supply APY for a token\nconst calculateSupplyApy = async symbol => {\n  try {\n    const market = await getMarket(symbol);\n    return market ? market.supplyApy : 0;\n  } catch (error) {\n    console.error(`Error calculating supply APY for ${symbol}:`, error);\n    return 0;\n  }\n};\n\n// Calculate borrow APY for a token\nconst calculateBorrowApy = async symbol => {\n  try {\n    const market = await getMarket(symbol);\n    return market ? market.borrowApy : 0;\n  } catch (error) {\n    console.error(`Error calculating borrow APY for ${symbol}:`, error);\n    return 0;\n  }\n};\n\n// Get mock market data for development\nconst getMockMarkets = () => {\n  return [{\n    symbol: 'DAI',\n    name: 'Dai Stablecoin',\n    cTokenSymbol: 'cDAI',\n    supplyApy: 2.53,\n    borrowApy: 3.82,\n    price: 1.00,\n    totalSupply: 1234567890,\n    totalBorrow: 987654321,\n    collateralFactor: 0.75,\n    exchangeRate: 0.02,\n    underlyingDecimals: 18\n  }, {\n    symbol: 'USDC',\n    name: 'USD Coin',\n    cTokenSymbol: 'cUSDC',\n    supplyApy: 2.12,\n    borrowApy: 3.45,\n    price: 1.00,\n    totalSupply: 2345678901,\n    totalBorrow: 1876543210,\n    collateralFactor: 0.80,\n    exchangeRate: 0.022,\n    underlyingDecimals: 6\n  }, {\n    symbol: 'ETH',\n    name: 'Ethereum',\n    cTokenSymbol: 'cETH',\n    supplyApy: 0.32,\n    borrowApy: 1.25,\n    price: 3500.00,\n    totalSupply: 123456,\n    totalBorrow: 98765,\n    collateralFactor: 0.70,\n    exchangeRate: 0.05,\n    underlyingDecimals: 18\n  }, {\n    symbol: 'WBTC',\n    name: 'Wrapped Bitcoin',\n    cTokenSymbol: 'cWBTC',\n    supplyApy: 0.21,\n    borrowApy: 1.12,\n    price: 60000.00,\n    totalSupply: 5432,\n    totalBorrow: 3210,\n    collateralFactor: 0.65,\n    exchangeRate: 0.02,\n    underlyingDecimals: 8\n  }];\n};\nconst compoundService = {\n  getMarkets,\n  getMarket,\n  calculateSupplyApy,\n  calculateBorrowApy\n};\nexport { compoundService };","map":{"version":3,"names":["Compound","config","compound","compoundNetwork","getMarkets","cTokens","api","account","Error","markets","map","cToken","_underlying$price","underlying","symbol","replace","name","address","cTokenSymbol","supplyApy","parseFloat","supply_rate","value","borrowApy","borrow_rate","price","totalSupply","total_supply","totalBorrow","total_borrow","collateralFactor","collateral_factor","exchangeRate","exchange_rate","underlyingDecimals","parseInt","decimals","error","console","isDevelopment","getMockMarkets","getMarket","find","market","calculateSupplyApy","calculateBorrowApy","compoundService"],"sources":["C:/Users/User/Documents/GitHub/LearnFi/learnfi/src/services/compoundService.js"],"sourcesContent":["import Compound from '@compound-finance/compound-js';\nimport config from '../config';\n\n// Initialize Compound with the network from config\nconst compound = new Compound(config.compoundNetwork);\n\n// Get all markets data\nconst getMarkets = async () => {\n  try {\n    // Get all cToken addresses\n    const cTokens = await compound.api.account({\n      \"addresses\": [],\n      \"network\": config.compoundNetwork\n    });\n\n    if (!cTokens.cTokens) {\n      throw new Error('Failed to fetch cToken data');\n    }\n\n    // Map cTokens to a more usable format\n    const markets = cTokens.cTokens.map(cToken => {\n      const underlying = cToken.underlying || {};\n      const symbol = underlying.symbol || cToken.symbol.replace('c', '');\n      \n      return {\n        symbol,\n        name: underlying.name || symbol,\n        address: cToken.address,\n        cTokenSymbol: cToken.symbol,\n        supplyApy: parseFloat(cToken.supply_rate.value) * 100,\n        borrowApy: parseFloat(cToken.borrow_rate.value) * 100,\n        price: parseFloat(underlying.price?.value || 0),\n        totalSupply: parseFloat(cToken.total_supply.value) || 0,\n        totalBorrow: parseFloat(cToken.total_borrow.value) || 0,\n        collateralFactor: parseFloat(cToken.collateral_factor.value) || 0,\n        exchangeRate: parseFloat(cToken.exchange_rate.value) || 0,\n        underlyingDecimals: parseInt(underlying.decimals) || 18\n      };\n    });\n\n    return markets;\n  } catch (error) {\n    console.error('Error fetching Compound markets:', error);\n    \n    // If in development mode, return mock data\n    if (config.isDevelopment) {\n      return getMockMarkets();\n    }\n    \n    throw error;\n  }\n};\n\n// Get specific market data\nconst getMarket = async (symbol) => {\n  try {\n    const markets = await getMarkets();\n    return markets.find(market => market.symbol === symbol);\n  } catch (error) {\n    console.error(`Error fetching market data for ${symbol}:`, error);\n    throw error;\n  }\n};\n\n// Calculate supply APY for a token\nconst calculateSupplyApy = async (symbol) => {\n  try {\n    const market = await getMarket(symbol);\n    return market ? market.supplyApy : 0;\n  } catch (error) {\n    console.error(`Error calculating supply APY for ${symbol}:`, error);\n    return 0;\n  }\n};\n\n// Calculate borrow APY for a token\nconst calculateBorrowApy = async (symbol) => {\n  try {\n    const market = await getMarket(symbol);\n    return market ? market.borrowApy : 0;\n  } catch (error) {\n    console.error(`Error calculating borrow APY for ${symbol}:`, error);\n    return 0;\n  }\n};\n\n// Get mock market data for development\nconst getMockMarkets = () => {\n  return [\n    {\n      symbol: 'DAI',\n      name: 'Dai Stablecoin',\n      cTokenSymbol: 'cDAI',\n      supplyApy: 2.53,\n      borrowApy: 3.82,\n      price: 1.00,\n      totalSupply: 1234567890,\n      totalBorrow: 987654321,\n      collateralFactor: 0.75,\n      exchangeRate: 0.02,\n      underlyingDecimals: 18\n    },\n    {\n      symbol: 'USDC',\n      name: 'USD Coin',\n      cTokenSymbol: 'cUSDC',\n      supplyApy: 2.12,\n      borrowApy: 3.45,\n      price: 1.00,\n      totalSupply: 2345678901,\n      totalBorrow: 1876543210,\n      collateralFactor: 0.80,\n      exchangeRate: 0.022,\n      underlyingDecimals: 6\n    },\n    {\n      symbol: 'ETH',\n      name: 'Ethereum',\n      cTokenSymbol: 'cETH',\n      supplyApy: 0.32,\n      borrowApy: 1.25,\n      price: 3500.00,\n      totalSupply: 123456,\n      totalBorrow: 98765,\n      collateralFactor: 0.70,\n      exchangeRate: 0.05,\n      underlyingDecimals: 18\n    },\n    {\n      symbol: 'WBTC',\n      name: 'Wrapped Bitcoin',\n      cTokenSymbol: 'cWBTC',\n      supplyApy: 0.21,\n      borrowApy: 1.12,\n      price: 60000.00,\n      totalSupply: 5432,\n      totalBorrow: 3210,\n      collateralFactor: 0.65,\n      exchangeRate: 0.02,\n      underlyingDecimals: 8\n    }\n  ];\n};\n\nconst compoundService = {\n  getMarkets,\n  getMarket,\n  calculateSupplyApy,\n  calculateBorrowApy\n};\n\nexport { compoundService };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}